/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.AgileSharingSettings
import org.openapitools.client.models.AgileStatus
import org.openapitools.client.models.ColorCoding
import org.openapitools.client.models.ColumnSettings
import org.openapitools.client.models.CustomField
import org.openapitools.client.models.Project
import org.openapitools.client.models.Sprint
import org.openapitools.client.models.SprintsSettings
import org.openapitools.client.models.SwimlaneSettings
import org.openapitools.client.models.User
import org.openapitools.client.models.UserGroup

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Represents an agile board configuration.
 *
 * @param id 
 * @param name 
 * @param owner 
 * @param visibleFor 
 * @param visibleForProjectBased 
 * @param updateableBy 
 * @param updateableByProjectBased 
 * @param readSharingSettings 
 * @param updateSharingSettings 
 * @param orphansAtTheTop 
 * @param hideOrphansSwimlane 
 * @param estimationField 
 * @param originalEstimationField 
 * @param projects 
 * @param sprints 
 * @param currentSprint 
 * @param columnSettings 
 * @param swimlaneSettings 
 * @param sprintsSettings 
 * @param colorCoding 
 * @param status 
 * @param dollarType 
 */


interface Agile {

    @Json(name = "id")
    val id: kotlin.String?
    @Json(name = "name")
    val name: kotlin.String?
    @Json(name = "owner")
    val owner: User?
    @Json(name = "visibleFor")
    val visibleFor: UserGroup?
    @Json(name = "visibleForProjectBased")
    val visibleForProjectBased: kotlin.Boolean?
    @Json(name = "updateableBy")
    val updateableBy: UserGroup?
    @Json(name = "updateableByProjectBased")
    val updateableByProjectBased: kotlin.Boolean?
    @Json(name = "readSharingSettings")
    val readSharingSettings: AgileSharingSettings?
    @Json(name = "updateSharingSettings")
    val updateSharingSettings: AgileSharingSettings?
    @Json(name = "orphansAtTheTop")
    val orphansAtTheTop: kotlin.Boolean?
    @Json(name = "hideOrphansSwimlane")
    val hideOrphansSwimlane: kotlin.Boolean?
    @Json(name = "estimationField")
    val estimationField: CustomField?
    @Json(name = "originalEstimationField")
    val originalEstimationField: CustomField?
    @Json(name = "projects")
    val projects: kotlin.collections.List<Project>?
    @Json(name = "sprints")
    val sprints: kotlin.collections.List<Sprint>?
    @Json(name = "currentSprint")
    val currentSprint: Sprint?
    @Json(name = "columnSettings")
    val columnSettings: ColumnSettings?
    @Json(name = "swimlaneSettings")
    val swimlaneSettings: SwimlaneSettings?
    @Json(name = "sprintsSettings")
    val sprintsSettings: SprintsSettings?
    @Json(name = "colorCoding")
    val colorCoding: ColorCoding?
    @Json(name = "status")
    val status: AgileStatus?
    @Json(name = "\$type")
    val dollarType: kotlin.String?
}

