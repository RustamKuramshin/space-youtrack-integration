/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.OnlineUsers

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Telemetry data of the YouTrack installation.
 *
 * @param id 
 * @param installationFolder 
 * @param databaseLocation 
 * @param logsLocation 
 * @param availableProcessors 
 * @param availableMemory 
 * @param allocatedMemory 
 * @param usedMemory 
 * @param uptime 
 * @param startedTime 
 * @param databaseBackgroundThreads 
 * @param pendingAsyncJobs 
 * @param cachedResultsCountInDBQueriesCache 
 * @param databaseQueriesCacheHitRate 
 * @param blobStringsCacheHitRate 
 * @param totalTransactions 
 * @param transactionsPerSecond 
 * @param requestsPerSecond 
 * @param databaseSize 
 * @param fullDatabaseSize 
 * @param textIndexSize 
 * @param onlineUsers 
 * @param reportCalculatorThreads 
 * @param notificationAnalyzerThreads 
 * @param dollarType 
 */


interface Telemetry {

    @Json(name = "id")
    val id: kotlin.String?
    @Json(name = "installationFolder")
    val installationFolder: kotlin.String?
    @Json(name = "databaseLocation")
    val databaseLocation: kotlin.String?
    @Json(name = "logsLocation")
    val logsLocation: kotlin.String?
    @Json(name = "availableProcessors")
    val availableProcessors: kotlin.Int?
    @Json(name = "availableMemory")
    val availableMemory: kotlin.String?
    @Json(name = "allocatedMemory")
    val allocatedMemory: kotlin.String?
    @Json(name = "usedMemory")
    val usedMemory: kotlin.String?
    @Json(name = "uptime")
    val uptime: kotlin.String?
    @Json(name = "startedTime")
    val startedTime: kotlin.Long?
    @Json(name = "databaseBackgroundThreads")
    val databaseBackgroundThreads: kotlin.Int?
    @Json(name = "pendingAsyncJobs")
    val pendingAsyncJobs: kotlin.Int?
    @Json(name = "cachedResultsCountInDBQueriesCache")
    val cachedResultsCountInDBQueriesCache: kotlin.Int?
    @Json(name = "databaseQueriesCacheHitRate")
    val databaseQueriesCacheHitRate: kotlin.String?
    @Json(name = "blobStringsCacheHitRate")
    val blobStringsCacheHitRate: kotlin.String?
    @Json(name = "totalTransactions")
    val totalTransactions: kotlin.Long?
    @Json(name = "transactionsPerSecond")
    val transactionsPerSecond: kotlin.String?
    @Json(name = "requestsPerSecond")
    val requestsPerSecond: kotlin.String?
    @Json(name = "databaseSize")
    val databaseSize: kotlin.String?
    @Json(name = "fullDatabaseSize")
    val fullDatabaseSize: kotlin.String?
    @Json(name = "textIndexSize")
    val textIndexSize: kotlin.String?
    @Json(name = "onlineUsers")
    val onlineUsers: OnlineUsers?
    @Json(name = "reportCalculatorThreads")
    val reportCalculatorThreads: kotlin.Int?
    @Json(name = "notificationAnalyzerThreads")
    val notificationAnalyzerThreads: kotlin.Int?
    @Json(name = "\$type")
    val dollarType: kotlin.String?
}

